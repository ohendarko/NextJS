/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/courses/page",{

/***/ "(app-pages-browser)/./app/(dashboard)/dashboard/courses/page.tsx":
/*!****************************************************!*\
  !*** ./app/(dashboard)/dashboard/courses/page.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DashboardPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(app-pages-browser)/./lib/db.ts\");\n/* harmony import */ var _Course__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Course */ \"(app-pages-browser)/./app/(dashboard)/dashboard/courses/Course.tsx\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n // or wherever you saved it\n\n\nasync function DashboardPage() {\n    var _session_user;\n    _s();\n    const { data: session, status } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    // const session = await getServerSession();\n    const userId = session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id;\n    if (!userId) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Not authenticated\"\n        }, void 0, false, {\n            fileName: \"D:\\\\KOD\\\\NextJS\\\\Pharma-Bridge-Journey\\\\app\\\\(dashboard)\\\\dashboard\\\\courses\\\\page.tsx\",\n            lineNumber: 13,\n            columnNumber: 12\n        }, this);\n    }\n    const userProfile = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.getUserProfile)(userId);\n    if (!userProfile) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"User profile not found\"\n        }, void 0, false, {\n            fileName: \"D:\\\\KOD\\\\NextJS\\\\Pharma-Bridge-Journey\\\\app\\\\(dashboard)\\\\dashboard\\\\courses\\\\page.tsx\",\n            lineNumber: 19,\n            columnNumber: 12\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Course__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        userProfile: userProfile\n    }, void 0, false, {\n        fileName: \"D:\\\\KOD\\\\NextJS\\\\Pharma-Bridge-Journey\\\\app\\\\(dashboard)\\\\dashboard\\\\courses\\\\page.tsx\",\n        lineNumber: 22,\n        columnNumber: 10\n    }, this);\n}\n_s(DashboardPage, \"oUn80oE9ZClEdeyFXFVf3FQCQnk=\", false, function() {\n    return [\n        next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession\n    ];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC8oZGFzaGJvYXJkKS9kYXNoYm9hcmQvY291cnNlcy9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUMwQyxDQUFDLDJCQUEyQjtBQUNsQztBQUVTO0FBRTlCLGVBQWVHO1FBR2JDOztJQUZmLE1BQU0sRUFBQ0MsTUFBTUQsT0FBTyxFQUFFRSxNQUFNLEVBQUMsR0FBR0osMkRBQVVBO0lBQzFDLDRDQUE0QztJQUM1QyxNQUFNSyxTQUFTSCxvQkFBQUEsK0JBQUFBLGdCQUFBQSxRQUFTSSxJQUFJLGNBQWJKLG9DQUFBQSxjQUFlSyxFQUFFO0lBRWhDLElBQUksQ0FBQ0YsUUFBUTtRQUNYLHFCQUFPLDhEQUFDRztzQkFBSTs7Ozs7O0lBQ2Q7SUFFQSxNQUFNQyxjQUFjLE1BQU1YLHVEQUFjQSxDQUFDTztJQUV6QyxJQUFJLENBQUNJLGFBQWE7UUFDaEIscUJBQU8sOERBQUNEO3NCQUFJOzs7Ozs7SUFDZDtJQUVBLHFCQUFPLDhEQUFDVCwrQ0FBWUE7UUFBQ1UsYUFBYUE7Ozs7OztBQUNwQztHQWhCOEJSOztRQUNJRCx1REFBVUE7OztLQURkQyIsInNvdXJjZXMiOlsiRDpcXEtPRFxcTmV4dEpTXFxQaGFybWEtQnJpZGdlLUpvdXJuZXlcXGFwcFxcKGRhc2hib2FyZClcXGRhc2hib2FyZFxcY291cnNlc1xccGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcbmltcG9ydCB7IGdldFVzZXJQcm9maWxlIH0gZnJvbSBcIkAvbGliL2RiXCI7IC8vIG9yIHdoZXJldmVyIHlvdSBzYXZlZCBpdFxyXG5pbXBvcnQgVmlkZW9Db3Vyc2VzIGZyb20gXCIuL0NvdXJzZVwiO1xyXG5pbXBvcnQgeyBnZXRTZXJ2ZXJTZXNzaW9uIH0gZnJvbSBcIm5leHQtYXV0aFwiO1xyXG5pbXBvcnQgeyB1c2VTZXNzaW9uIH0gZnJvbSBcIm5leHQtYXV0aC9yZWFjdFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gRGFzaGJvYXJkUGFnZSgpIHtcclxuICBjb25zdCB7ZGF0YTogc2Vzc2lvbiwgc3RhdHVzfSA9IHVzZVNlc3Npb24oKVxyXG4gIC8vIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKCk7XHJcbiAgY29uc3QgdXNlcklkID0gc2Vzc2lvbj8udXNlcj8uaWQ7XHJcblxyXG4gIGlmICghdXNlcklkKSB7XHJcbiAgICByZXR1cm4gPGRpdj5Ob3QgYXV0aGVudGljYXRlZDwvZGl2PjtcclxuICB9XHJcblxyXG4gIGNvbnN0IHVzZXJQcm9maWxlID0gYXdhaXQgZ2V0VXNlclByb2ZpbGUodXNlcklkKTtcclxuXHJcbiAgaWYgKCF1c2VyUHJvZmlsZSkge1xyXG4gICAgcmV0dXJuIDxkaXY+VXNlciBwcm9maWxlIG5vdCBmb3VuZDwvZGl2PjtcclxuICB9XHJcblxyXG4gIHJldHVybiA8VmlkZW9Db3Vyc2VzIHVzZXJQcm9maWxlPXt1c2VyUHJvZmlsZX0gLz47XHJcbn1cclxuIl0sIm5hbWVzIjpbImdldFVzZXJQcm9maWxlIiwiVmlkZW9Db3Vyc2VzIiwidXNlU2Vzc2lvbiIsIkRhc2hib2FyZFBhZ2UiLCJzZXNzaW9uIiwiZGF0YSIsInN0YXR1cyIsInVzZXJJZCIsInVzZXIiLCJpZCIsImRpdiIsInVzZXJQcm9maWxlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(dashboard)/dashboard/courses/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserProfile: () => (/* binding */ getUserProfile)\n/* harmony export */ });\n/* harmony import */ var _lib_generated_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/generated/prisma */ \"(app-pages-browser)/./lib/generated/prisma/index-browser.js\");\n/* harmony import */ var _lib_generated_prisma__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_generated_prisma__WEBPACK_IMPORTED_MODULE_0__);\n // adjust to your Prisma instance\nconst prisma = new _lib_generated_prisma__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function getUserProfile(userId) {\n    try {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error(\"Error fetching user profile:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9kYi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0QsQ0FBQyxpQ0FBaUM7QUFFeEYsTUFBTUMsU0FBUyxJQUFJRCwrREFBWUE7QUFFeEIsZUFBZUUsZUFBZUMsTUFBYztJQUNqRCxJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNSCxPQUFPRyxJQUFJLENBQUNDLFVBQVUsQ0FBQztZQUN4Q0MsT0FBTztnQkFBRUMsSUFBSUo7WUFBTztRQUN0QjtRQUVBLE9BQU9DO0lBQ1QsRUFBRSxPQUFPSSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJEOlxcS09EXFxOZXh0SlNcXFBoYXJtYS1CcmlkZ2UtSm91cm5leVxcbGliXFxkYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tIFwiQC9saWIvZ2VuZXJhdGVkL3ByaXNtYVwiOyAvLyBhZGp1c3QgdG8geW91ciBQcmlzbWEgaW5zdGFuY2VcclxuXHJcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVc2VyUHJvZmlsZSh1c2VySWQ6IHN0cmluZykge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XHJcbiAgICAgIHdoZXJlOiB7IGlkOiB1c2VySWQgfSxcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB1c2VyO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgdXNlciBwcm9maWxlOlwiLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdldFVzZXJQcm9maWxlIiwidXNlcklkIiwidXNlciIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImlkIiwiZXJyb3IiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/db.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/generated/prisma/index-browser.js":
/*!***********************************************!*\
  !*** ./lib/generated/prisma/index-browser.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* !!! This is code generated by Prisma. Do not edit directly. !!!\n/* eslint-disable */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst { Decimal, objectEnumValues, makeStrictEnum, Public, getRuntime, skip } = __webpack_require__(/*! ./runtime/index-browser.js */ \"(app-pages-browser)/./lib/generated/prisma/runtime/index-browser.js\");\nconst Prisma = {};\nexports.Prisma = Prisma;\nexports.$Enums = {};\n/**\n * Prisma Client JS version: 6.8.2\n * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e\n */ Prisma.prismaVersion = {\n    client: \"6.8.2\",\n    engine: \"2060c79ba17c6bb9f5823312b6f6b7f4a845738e\"\n};\nPrisma.PrismaClientKnownRequestError = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.PrismaClientUnknownRequestError = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.PrismaClientRustPanicError = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.PrismaClientInitializationError = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.PrismaClientValidationError = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.Decimal = Decimal;\n/**\n * Re-export of sql-template-tag\n */ Prisma.sql = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"sqltag is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.empty = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"empty is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.join = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"join is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.raw = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"raw is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.validator = Public.validator;\n/**\n* Extensions\n*/ Prisma.getExtensionContext = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\nPrisma.defineExtension = ()=>{\n    const runtimeName = getRuntime().prettyName;\n    throw new Error(\"Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in \".concat(runtimeName, \").\\nIn case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report\"));\n};\n/**\n * Shorthand utilities for JSON filtering\n */ Prisma.DbNull = objectEnumValues.instances.DbNull;\nPrisma.JsonNull = objectEnumValues.instances.JsonNull;\nPrisma.AnyNull = objectEnumValues.instances.AnyNull;\nPrisma.NullTypes = {\n    DbNull: objectEnumValues.classes.DbNull,\n    JsonNull: objectEnumValues.classes.JsonNull,\n    AnyNull: objectEnumValues.classes.AnyNull\n};\n/**\n * Enums\n */ exports.Prisma.UserScalarFieldEnum = {\n    id: 'id',\n    email: 'email',\n    name: 'name',\n    password: 'password',\n    createdAt: 'createdAt',\n    profileImage: 'profileImage',\n    admin: 'admin',\n    verified: 'verified',\n    hasCompletedOnboarding: 'hasCompletedOnboarding',\n    fpgeeFormSubmitted: 'fpgeeFormSubmitted',\n    fpgecApplicationSubmitted: 'fpgecApplicationSubmitted',\n    fpgeePassed: 'fpgeePassed',\n    fpgecCertficateIssued: 'fpgecCertficateIssued',\n    stateBoardApplicationCompleted: 'stateBoardApplicationCompleted',\n    passportScanSubmitted: 'passportScanSubmitted',\n    passportPhotoSubmitted: 'passportPhotoSubmitted',\n    pharmacyLicenseSubmitted: 'pharmacyLicenseSubmitted',\n    goodStandingLetterSubmitted: 'goodStandingLetterSubmitted',\n    eceApplicationCompleted: 'eceApplicationCompleted',\n    officialTranscriptsSent: 'officialTranscriptsSent',\n    courseDescriptionsSubmitted: 'courseDescriptionsSubmitted',\n    eceEvaluationFeeePaid: 'eceEvaluationFeeePaid',\n    toeflTestRegistered: 'toeflTestRegistered',\n    toeflTestCompleted: 'toeflTestCompleted',\n    toeflScoresSent: 'toeflScoresSent',\n    naplexEligibilityConfirmed: 'naplexEligibilityConfirmed',\n    naplexTestRegistered: 'naplexTestRegistered',\n    naplexPreparationCompleted: 'naplexPreparationCompleted',\n    naplexCompleted: 'naplexCompleted',\n    mpjeEligibilityConfirmed: 'mpjeEligibilityConfirmed',\n    mpjePreparationCompleted: 'mpjePreparationCompleted',\n    mpjeTestRegistered: 'mpjeTestRegistered',\n    mpjeTestCompleted: 'mpjeTestCompleted',\n    internshipHoursCompleted: 'internshipHoursCompleted',\n    pharmacyLicenseObtained: 'pharmacyLicenseObtained',\n    maintainLicensure: 'maintainLicensure',\n    boardSpecialization: 'boardSpecialization',\n    dateOfBirth: 'dateOfBirth',\n    gender: 'gender',\n    phoneNumber: 'phoneNumber',\n    timezone: 'timezone',\n    countryOfDegree: 'countryOfDegree',\n    degreeType: 'degreeType',\n    graduationYear: 'graduationYear',\n    degreeFile: 'degreeFile',\n    passportFile: 'passportFile',\n    licenseFile: 'licenseFile',\n    hasVisa: 'hasVisa',\n    visaType: 'visaType',\n    arrivalDate: 'arrivalDate',\n    preferredState: 'preferredState',\n    selectedPackage: 'selectedPackage'\n};\nexports.Prisma.PackageSelectionScalarFieldEnum = {\n    id: 'id',\n    packageName: 'packageName',\n    isPaid: 'isPaid',\n    isActive: 'isActive',\n    createdAt: 'createdAt',\n    userId: 'userId'\n};\nexports.Prisma.ConsultationScalarFieldEnum = {\n    id: 'id',\n    date: 'date',\n    isPaid: 'isPaid',\n    createdAt: 'createdAt',\n    userId: 'userId'\n};\nexports.Prisma.AccountScalarFieldEnum = {\n    id: 'id',\n    userId: 'userId',\n    type: 'type',\n    provider: 'provider',\n    providerAccountId: 'providerAccountId',\n    refresh_token: 'refresh_token',\n    access_token: 'access_token',\n    expires_at: 'expires_at',\n    token_type: 'token_type',\n    scope: 'scope',\n    id_token: 'id_token',\n    session_state: 'session_state'\n};\nexports.Prisma.SessionScalarFieldEnum = {\n    id: 'id',\n    sessionToken: 'sessionToken',\n    userId: 'userId',\n    expires: 'expires'\n};\nexports.Prisma.VerificationTokenScalarFieldEnum = {\n    id: 'id',\n    identifier: 'identifier',\n    token: 'token',\n    expires: 'expires'\n};\nexports.Prisma.DocumentScalarFieldEnum = {\n    id: 'id',\n    userId: 'userId',\n    ownerName: 'ownerName',\n    ownerEmail: 'ownerEmail',\n    name: 'name',\n    type: 'type',\n    status: 'status',\n    uploadDate: 'uploadDate',\n    size: 'size',\n    url: 'url',\n    notes: 'notes',\n    category: 'category'\n};\nexports.Prisma.SortOrder = {\n    asc: 'asc',\n    desc: 'desc'\n};\nexports.Prisma.QueryMode = {\n    default: 'default',\n    insensitive: 'insensitive'\n};\nexports.Prisma.ModelName = {\n    User: 'User',\n    PackageSelection: 'PackageSelection',\n    Consultation: 'Consultation',\n    Account: 'Account',\n    Session: 'Session',\n    VerificationToken: 'VerificationToken',\n    Document: 'Document'\n};\n/**\n * This is a stub Prisma Client that will error at runtime if called.\n */ class PrismaClient {\n    constructor(){\n        return new Proxy(this, {\n            get (target, prop) {\n                let message;\n                const runtime = getRuntime();\n                if (runtime.isEdge) {\n                    message = \"PrismaClient is not configured to run in \".concat(runtime.prettyName, \". In order to run Prisma Client on edge runtime, either:\\n- Use Prisma Accelerate: https://pris.ly/d/accelerate\\n- Use Driver Adapters: https://pris.ly/d/driver-adapters\\n\");\n                } else {\n                    message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).';\n                }\n                message += \"\\nIf this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report\";\n                throw new Error(message);\n            }\n        });\n    }\n}\nexports.PrismaClient = PrismaClient;\nObject.assign(exports, Prisma);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/generated/prisma/index-browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/generated/prisma/runtime/index-browser.js":
/*!*******************************************************!*\
  !*** ./lib/generated/prisma/runtime/index-browser.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* !!! This is code generated by Prisma. Do not edit directly. !!!\n/* eslint-disable */ \nvar pe = Object.defineProperty;\nvar Xe = Object.getOwnPropertyDescriptor;\nvar Ke = Object.getOwnPropertyNames;\nvar Qe = Object.prototype.hasOwnProperty;\nvar Ye = (e)=>{\n    throw TypeError(e);\n};\n_c = Ye;\nvar Oe = (e, n)=>{\n    for(var i in n)pe(e, i, {\n        get: n[i],\n        enumerable: !0\n    });\n}, xe = (e, n, i, t)=>{\n    if (n && typeof n == \"object\" || typeof n == \"function\") for (let r of Ke(n))!Qe.call(e, r) && r !== i && pe(e, r, {\n        get: ()=>n[r],\n        enumerable: !(t = Xe(n, r)) || t.enumerable\n    });\n    return e;\n};\nvar ze = (e)=>xe(pe({}, \"__esModule\", {\n        value: !0\n    }), e);\nvar ne = (e, n, i)=>n.has(e) ? Ye(\"Cannot add the same private member more than once\") : n instanceof WeakSet ? n.add(e) : n.set(e, i);\nvar ii = {};\nOe(ii, {\n    Decimal: ()=>Je,\n    Public: ()=>ge,\n    getRuntime: ()=>_e,\n    makeStrictEnum: ()=>qe,\n    objectEnumValues: ()=>Ae\n});\nmodule.exports = ze(ii);\nvar ge = {};\nOe(ge, {\n    validator: ()=>Re\n});\nfunction Re() {\n    for(var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++){\n        e[_key] = arguments[_key];\n    }\n    return (n)=>n;\n}\n_c1 = Re;\nvar ie = Symbol(), me = new WeakMap, we = class {\n    _getName() {\n        return this.constructor.name;\n    }\n    toString() {\n        return me.get(this);\n    }\n    constructor(n){\n        n === ie ? me.set(this, \"Prisma.\".concat(this._getName())) : me.set(this, \"new Prisma.\".concat(this._getNamespace(), \".\").concat(this._getName(), \"()\"));\n    }\n}, G = class extends we {\n    _getNamespace() {\n        return \"NullTypes\";\n    }\n}, Ne, J = class extends G {\n    constructor(){\n        super(...arguments);\n        ne(this, Ne);\n    }\n};\nNe = new WeakMap;\nke(J, \"DbNull\");\nvar ve, X = class extends G {\n    constructor(){\n        super(...arguments);\n        ne(this, ve);\n    }\n};\nve = new WeakMap;\nke(X, \"JsonNull\");\nvar Ee, K = class extends G {\n    constructor(){\n        super(...arguments);\n        ne(this, Ee);\n    }\n};\nEe = new WeakMap;\nke(K, \"AnyNull\");\nvar Ae = {\n    classes: {\n        DbNull: J,\n        JsonNull: X,\n        AnyNull: K\n    },\n    instances: {\n        DbNull: new J(ie),\n        JsonNull: new X(ie),\n        AnyNull: new K(ie)\n    }\n};\nfunction ke(e, n) {\n    Object.defineProperty(e, \"name\", {\n        value: n,\n        configurable: !0\n    });\n}\nvar ye = new Set([\n    \"toJSON\",\n    \"$$typeof\",\n    \"asymmetricMatch\",\n    Symbol.iterator,\n    Symbol.toStringTag,\n    Symbol.isConcatSpreadable,\n    Symbol.toPrimitive\n]);\nfunction qe(e) {\n    return new Proxy(e, {\n        get (n, i) {\n            if (i in n) return n[i];\n            if (!ye.has(i)) throw new TypeError(\"Invalid enum value: \".concat(String(i)));\n        }\n    });\n}\nvar en = ()=>{\n    var e, n;\n    return ((n = (e = globalThis.process) == null ? void 0 : e.release) == null ? void 0 : n.name) === \"node\";\n}, nn = ()=>{\n    var e, n;\n    return !!globalThis.Bun || !!((n = (e = globalThis.process) == null ? void 0 : e.versions) != null && n.bun);\n}, tn = ()=>!!globalThis.Deno, rn = ()=>typeof globalThis.Netlify == \"object\", sn = ()=>typeof globalThis.EdgeRuntime == \"object\", on = ()=>{\n    var e;\n    return ((e = globalThis.navigator) == null ? void 0 : e.userAgent) === \"Cloudflare-Workers\";\n};\nfunction un() {\n    var i;\n    return (i = [\n        [\n            rn,\n            \"netlify\"\n        ],\n        [\n            sn,\n            \"edge-light\"\n        ],\n        [\n            on,\n            \"workerd\"\n        ],\n        [\n            tn,\n            \"deno\"\n        ],\n        [\n            nn,\n            \"bun\"\n        ],\n        [\n            en,\n            \"node\"\n        ]\n    ].flatMap((t)=>t[0]() ? [\n            t[1]\n        ] : []).at(0)) != null ? i : \"\";\n}\nvar fn = {\n    node: \"Node.js\",\n    workerd: \"Cloudflare Workers\",\n    deno: \"Deno and Deno Deploy\",\n    netlify: \"Netlify Edge Functions\",\n    \"edge-light\": \"Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)\"\n};\nfunction _e() {\n    let e = un();\n    return {\n        id: e,\n        prettyName: fn[e] || e,\n        isEdge: [\n            \"workerd\",\n            \"deno\",\n            \"netlify\",\n            \"edge-light\"\n        ].includes(e)\n    };\n}\nvar V = 9e15, H = 1e9, Se = \"0123456789abcdef\", se = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\", oe = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\", Me = {\n    precision: 20,\n    rounding: 4,\n    modulo: 1,\n    toExpNeg: -7,\n    toExpPos: 21,\n    minE: -V,\n    maxE: V,\n    crypto: !1\n}, Le, Z, w = !0, fe = \"[DecimalError] \", $ = fe + \"Invalid argument: \", Ie = fe + \"Precision limit exceeded\", Ze = fe + \"crypto unavailable\", Ue = \"[object Decimal]\", R = Math.floor, C = Math.pow, cn = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i, ln = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i, an = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i, Be = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i, D = 1e7, m = 7, dn = 9007199254740991, hn = se.length - 1, Ce = oe.length - 1, h = {\n    toStringTag: Ue\n};\nh.absoluteValue = h.abs = function() {\n    var e = new this.constructor(this);\n    return e.s < 0 && (e.s = 1), p(e);\n};\nh.ceil = function() {\n    return p(new this.constructor(this), this.e + 1, 2);\n};\nh.clampedTo = h.clamp = function(e, n) {\n    var i, t = this, r = t.constructor;\n    if (e = new r(e), n = new r(n), !e.s || !n.s) return new r(NaN);\n    if (e.gt(n)) throw Error($ + n);\n    return i = t.cmp(e), i < 0 ? e : t.cmp(n) > 0 ? n : new r(t);\n};\nh.comparedTo = h.cmp = function(e) {\n    var n, i, t, r, s = this, o = s.d, u = (e = new s.constructor(e)).d, c = s.s, f = e.s;\n    if (!o || !u) return !c || !f ? NaN : c !== f ? c : o === u ? 0 : !o ^ c < 0 ? 1 : -1;\n    if (!o[0] || !u[0]) return o[0] ? c : u[0] ? -f : 0;\n    if (c !== f) return c;\n    if (s.e !== e.e) return s.e > e.e ^ c < 0 ? 1 : -1;\n    for(t = o.length, r = u.length, n = 0, i = t < r ? t : r; n < i; ++n)if (o[n] !== u[n]) return o[n] > u[n] ^ c < 0 ? 1 : -1;\n    return t === r ? 0 : t > r ^ c < 0 ? 1 : -1;\n};\nh.cosine = h.cos = function() {\n    var e, n, i = this, t = i.constructor;\n    return i.d ? i.d[0] ? (e = t.precision, n = t.rounding, t.precision = e + Math.max(i.e, i.sd()) + m, t.rounding = 1, i = pn(t, We(t, i)), t.precision = e, t.rounding = n, p(Z == 2 || Z == 3 ? i.neg() : i, e, n, !0)) : new t(1) : new t(NaN);\n};\nh.cubeRoot = h.cbrt = function() {\n    var e, n, i, t, r, s, o, u, c, f, l = this, a = l.constructor;\n    if (!l.isFinite() || l.isZero()) return new a(l);\n    for(w = !1, s = l.s * C(l.s * l, 1 / 3), !s || Math.abs(s) == 1 / 0 ? (i = b(l.d), e = l.e, (s = (e - i.length + 1) % 3) && (i += s == 1 || s == -2 ? \"0\" : \"00\"), s = C(i, 1 / 3), e = R((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2)), s == 1 / 0 ? i = \"5e\" + e : (i = s.toExponential(), i = i.slice(0, i.indexOf(\"e\") + 1) + e), t = new a(i), t.s = l.s) : t = new a(s.toString()), o = (e = a.precision) + 3;;)if (u = t, c = u.times(u).times(u), f = c.plus(l), t = k(f.plus(l).times(u), f.plus(c), o + 2, 1), b(u.d).slice(0, o) === (i = b(t.d)).slice(0, o)) if (i = i.slice(o - 3, o + 1), i == \"9999\" || !r && i == \"4999\") {\n        if (!r && (p(u, e + 1, 0), u.times(u).times(u).eq(l))) {\n            t = u;\n            break;\n        }\n        o += 4, r = 1;\n    } else {\n        (!+i || !+i.slice(1) && i.charAt(0) == \"5\") && (p(t, e + 1, 1), n = !t.times(t).times(t).eq(l));\n        break;\n    }\n    return w = !0, p(t, e, a.rounding, n);\n};\nh.decimalPlaces = h.dp = function() {\n    var e, n = this.d, i = NaN;\n    if (n) {\n        if (e = n.length - 1, i = (e - R(this.e / m)) * m, e = n[e], e) for(; e % 10 == 0; e /= 10)i--;\n        i < 0 && (i = 0);\n    }\n    return i;\n};\nh.dividedBy = h.div = function(e) {\n    return k(this, new this.constructor(e));\n};\nh.dividedToIntegerBy = h.divToInt = function(e) {\n    var n = this, i = n.constructor;\n    return p(k(n, new i(e), 0, 1, 1), i.precision, i.rounding);\n};\nh.equals = h.eq = function(e) {\n    return this.cmp(e) === 0;\n};\nh.floor = function() {\n    return p(new this.constructor(this), this.e + 1, 3);\n};\nh.greaterThan = h.gt = function(e) {\n    return this.cmp(e) > 0;\n};\nh.greaterThanOrEqualTo = h.gte = function(e) {\n    var n = this.cmp(e);\n    return n == 1 || n === 0;\n};\nh.hyperbolicCosine = h.cosh = function() {\n    var e, n, i, t, r, s = this, o = s.constructor, u = new o(1);\n    if (!s.isFinite()) return new o(s.s ? 1 / 0 : NaN);\n    if (s.isZero()) return u;\n    i = o.precision, t = o.rounding, o.precision = i + Math.max(s.e, s.sd()) + 4, o.rounding = 1, r = s.d.length, r < 32 ? (e = Math.ceil(r / 3), n = (1 / le(4, e)).toString()) : (e = 16, n = \"2.3283064365386962890625e-10\"), s = j(o, 1, s.times(n), new o(1), !0);\n    for(var c, f = e, l = new o(8); f--;)c = s.times(s), s = u.minus(c.times(l.minus(c.times(l))));\n    return p(s, o.precision = i, o.rounding = t, !0);\n};\nh.hyperbolicSine = h.sinh = function() {\n    var e, n, i, t, r = this, s = r.constructor;\n    if (!r.isFinite() || r.isZero()) return new s(r);\n    if (n = s.precision, i = s.rounding, s.precision = n + Math.max(r.e, r.sd()) + 4, s.rounding = 1, t = r.d.length, t < 3) r = j(s, 2, r, r, !0);\n    else {\n        e = 1.4 * Math.sqrt(t), e = e > 16 ? 16 : e | 0, r = r.times(1 / le(5, e)), r = j(s, 2, r, r, !0);\n        for(var o, u = new s(5), c = new s(16), f = new s(20); e--;)o = r.times(r), r = r.times(u.plus(o.times(c.times(o).plus(f))));\n    }\n    return s.precision = n, s.rounding = i, p(r, n, i, !0);\n};\nh.hyperbolicTangent = h.tanh = function() {\n    var e, n, i = this, t = i.constructor;\n    return i.isFinite() ? i.isZero() ? new t(i) : (e = t.precision, n = t.rounding, t.precision = e + 7, t.rounding = 1, k(i.sinh(), i.cosh(), t.precision = e, t.rounding = n)) : new t(i.s);\n};\nh.inverseCosine = h.acos = function() {\n    var e = this, n = e.constructor, i = e.abs().cmp(1), t = n.precision, r = n.rounding;\n    return i !== -1 ? i === 0 ? e.isNeg() ? F(n, t, r) : new n(0) : new n(NaN) : e.isZero() ? F(n, t + 4, r).times(.5) : (n.precision = t + 6, n.rounding = 1, e = new n(1).minus(e).div(e.plus(1)).sqrt().atan(), n.precision = t, n.rounding = r, e.times(2));\n};\nh.inverseHyperbolicCosine = h.acosh = function() {\n    var e, n, i = this, t = i.constructor;\n    return i.lte(1) ? new t(i.eq(1) ? 0 : NaN) : i.isFinite() ? (e = t.precision, n = t.rounding, t.precision = e + Math.max(Math.abs(i.e), i.sd()) + 4, t.rounding = 1, w = !1, i = i.times(i).minus(1).sqrt().plus(i), w = !0, t.precision = e, t.rounding = n, i.ln()) : new t(i);\n};\nh.inverseHyperbolicSine = h.asinh = function() {\n    var e, n, i = this, t = i.constructor;\n    return !i.isFinite() || i.isZero() ? new t(i) : (e = t.precision, n = t.rounding, t.precision = e + 2 * Math.max(Math.abs(i.e), i.sd()) + 6, t.rounding = 1, w = !1, i = i.times(i).plus(1).sqrt().plus(i), w = !0, t.precision = e, t.rounding = n, i.ln());\n};\nh.inverseHyperbolicTangent = h.atanh = function() {\n    var e, n, i, t, r = this, s = r.constructor;\n    return r.isFinite() ? r.e >= 0 ? new s(r.abs().eq(1) ? r.s / 0 : r.isZero() ? r : NaN) : (e = s.precision, n = s.rounding, t = r.sd(), Math.max(t, e) < 2 * -r.e - 1 ? p(new s(r), e, n, !0) : (s.precision = i = t - r.e, r = k(r.plus(1), new s(1).minus(r), i + e, 1), s.precision = e + 4, s.rounding = 1, r = r.ln(), s.precision = e, s.rounding = n, r.times(.5))) : new s(NaN);\n};\nh.inverseSine = h.asin = function() {\n    var e, n, i, t, r = this, s = r.constructor;\n    return r.isZero() ? new s(r) : (n = r.abs().cmp(1), i = s.precision, t = s.rounding, n !== -1 ? n === 0 ? (e = F(s, i + 4, t).times(.5), e.s = r.s, e) : new s(NaN) : (s.precision = i + 6, s.rounding = 1, r = r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(), s.precision = i, s.rounding = t, r.times(2)));\n};\nh.inverseTangent = h.atan = function() {\n    var e, n, i, t, r, s, o, u, c, f = this, l = f.constructor, a = l.precision, d = l.rounding;\n    if (f.isFinite()) {\n        if (f.isZero()) return new l(f);\n        if (f.abs().eq(1) && a + 4 <= Ce) return o = F(l, a + 4, d).times(.25), o.s = f.s, o;\n    } else {\n        if (!f.s) return new l(NaN);\n        if (a + 4 <= Ce) return o = F(l, a + 4, d).times(.5), o.s = f.s, o;\n    }\n    for(l.precision = u = a + 10, l.rounding = 1, i = Math.min(28, u / m + 2 | 0), e = i; e; --e)f = f.div(f.times(f).plus(1).sqrt().plus(1));\n    for(w = !1, n = Math.ceil(u / m), t = 1, c = f.times(f), o = new l(f), r = f; e !== -1;)if (r = r.times(c), s = o.minus(r.div(t += 2)), r = r.times(c), o = s.plus(r.div(t += 2)), o.d[n] !== void 0) for(e = n; o.d[e] === s.d[e] && e--;);\n    return i && (o = o.times(2 << i - 1)), w = !0, p(o, l.precision = a, l.rounding = d, !0);\n};\nh.isFinite = function() {\n    return !!this.d;\n};\nh.isInteger = h.isInt = function() {\n    return !!this.d && R(this.e / m) > this.d.length - 2;\n};\nh.isNaN = function() {\n    return !this.s;\n};\nh.isNegative = h.isNeg = function() {\n    return this.s < 0;\n};\nh.isPositive = h.isPos = function() {\n    return this.s > 0;\n};\nh.isZero = function() {\n    return !!this.d && this.d[0] === 0;\n};\nh.lessThan = h.lt = function(e) {\n    return this.cmp(e) < 0;\n};\nh.lessThanOrEqualTo = h.lte = function(e) {\n    return this.cmp(e) < 1;\n};\nh.logarithm = h.log = function(e) {\n    var n, i, t, r, s, o, u, c, f = this, l = f.constructor, a = l.precision, d = l.rounding, g = 5;\n    if (e == null) e = new l(10), n = !0;\n    else {\n        if (e = new l(e), i = e.d, e.s < 0 || !i || !i[0] || e.eq(1)) return new l(NaN);\n        n = e.eq(10);\n    }\n    if (i = f.d, f.s < 0 || !i || !i[0] || f.eq(1)) return new l(i && !i[0] ? -1 / 0 : f.s != 1 ? NaN : i ? 0 : 1 / 0);\n    if (n) if (i.length > 1) s = !0;\n    else {\n        for(r = i[0]; r % 10 === 0;)r /= 10;\n        s = r !== 1;\n    }\n    if (w = !1, u = a + g, o = B(f, u), t = n ? ue(l, u + 10) : B(e, u), c = k(o, t, u, 1), Q(c.d, r = a, d)) do if (u += 10, o = B(f, u), t = n ? ue(l, u + 10) : B(e, u), c = k(o, t, u, 1), !s) {\n        +b(c.d).slice(r + 1, r + 15) + 1 == 1e14 && (c = p(c, a + 1, 0));\n        break;\n    }\n    while (Q(c.d, r += 10, d));\n    return w = !0, p(c, a, d);\n};\nh.minus = h.sub = function(e) {\n    var n, i, t, r, s, o, u, c, f, l, a, d, g = this, v = g.constructor;\n    if (e = new v(e), !g.d || !e.d) return !g.s || !e.s ? e = new v(NaN) : g.d ? e.s = -e.s : e = new v(e.d || g.s !== e.s ? g : NaN), e;\n    if (g.s != e.s) return e.s = -e.s, g.plus(e);\n    if (f = g.d, d = e.d, u = v.precision, c = v.rounding, !f[0] || !d[0]) {\n        if (d[0]) e.s = -e.s;\n        else if (f[0]) e = new v(g);\n        else return new v(c === 3 ? -0 : 0);\n        return w ? p(e, u, c) : e;\n    }\n    if (i = R(e.e / m), l = R(g.e / m), f = f.slice(), s = l - i, s) {\n        for(a = s < 0, a ? (n = f, s = -s, o = d.length) : (n = d, i = l, o = f.length), t = Math.max(Math.ceil(u / m), o) + 2, s > t && (s = t, n.length = 1), n.reverse(), t = s; t--;)n.push(0);\n        n.reverse();\n    } else {\n        for(t = f.length, o = d.length, a = t < o, a && (o = t), t = 0; t < o; t++)if (f[t] != d[t]) {\n            a = f[t] < d[t];\n            break;\n        }\n        s = 0;\n    }\n    for(a && (n = f, f = d, d = n, e.s = -e.s), o = f.length, t = d.length - o; t > 0; --t)f[o++] = 0;\n    for(t = d.length; t > s;){\n        if (f[--t] < d[t]) {\n            for(r = t; r && f[--r] === 0;)f[r] = D - 1;\n            --f[r], f[t] += D;\n        }\n        f[t] -= d[t];\n    }\n    for(; f[--o] === 0;)f.pop();\n    for(; f[0] === 0; f.shift())--i;\n    return f[0] ? (e.d = f, e.e = ce(f, i), w ? p(e, u, c) : e) : new v(c === 3 ? -0 : 0);\n};\nh.modulo = h.mod = function(e) {\n    var n, i = this, t = i.constructor;\n    return e = new t(e), !i.d || !e.s || e.d && !e.d[0] ? new t(NaN) : !e.d || i.d && !i.d[0] ? p(new t(i), t.precision, t.rounding) : (w = !1, t.modulo == 9 ? (n = k(i, e.abs(), 0, 3, 1), n.s *= e.s) : n = k(i, e, 0, t.modulo, 1), n = n.times(e), w = !0, i.minus(n));\n};\nh.naturalExponential = h.exp = function() {\n    return be(this);\n};\nh.naturalLogarithm = h.ln = function() {\n    return B(this);\n};\nh.negated = h.neg = function() {\n    var e = new this.constructor(this);\n    return e.s = -e.s, p(e);\n};\nh.plus = h.add = function(e) {\n    var n, i, t, r, s, o, u, c, f, l, a = this, d = a.constructor;\n    if (e = new d(e), !a.d || !e.d) return !a.s || !e.s ? e = new d(NaN) : a.d || (e = new d(e.d || a.s === e.s ? a : NaN)), e;\n    if (a.s != e.s) return e.s = -e.s, a.minus(e);\n    if (f = a.d, l = e.d, u = d.precision, c = d.rounding, !f[0] || !l[0]) return l[0] || (e = new d(a)), w ? p(e, u, c) : e;\n    if (s = R(a.e / m), t = R(e.e / m), f = f.slice(), r = s - t, r) {\n        for(r < 0 ? (i = f, r = -r, o = l.length) : (i = l, t = s, o = f.length), s = Math.ceil(u / m), o = s > o ? s + 1 : o + 1, r > o && (r = o, i.length = 1), i.reverse(); r--;)i.push(0);\n        i.reverse();\n    }\n    for(o = f.length, r = l.length, o - r < 0 && (r = o, i = l, l = f, f = i), n = 0; r;)n = (f[--r] = f[r] + l[r] + n) / D | 0, f[r] %= D;\n    for(n && (f.unshift(n), ++t), o = f.length; f[--o] == 0;)f.pop();\n    return e.d = f, e.e = ce(f, t), w ? p(e, u, c) : e;\n};\nh.precision = h.sd = function(e) {\n    var n, i = this;\n    if (e !== void 0 && e !== !!e && e !== 1 && e !== 0) throw Error($ + e);\n    return i.d ? (n = $e(i.d), e && i.e + 1 > n && (n = i.e + 1)) : n = NaN, n;\n};\nh.round = function() {\n    var e = this, n = e.constructor;\n    return p(new n(e), e.e + 1, n.rounding);\n};\nh.sine = h.sin = function() {\n    var e, n, i = this, t = i.constructor;\n    return i.isFinite() ? i.isZero() ? new t(i) : (e = t.precision, n = t.rounding, t.precision = e + Math.max(i.e, i.sd()) + m, t.rounding = 1, i = mn(t, We(t, i)), t.precision = e, t.rounding = n, p(Z > 2 ? i.neg() : i, e, n, !0)) : new t(NaN);\n};\nh.squareRoot = h.sqrt = function() {\n    var e, n, i, t, r, s, o = this, u = o.d, c = o.e, f = o.s, l = o.constructor;\n    if (f !== 1 || !u || !u[0]) return new l(!f || f < 0 && (!u || u[0]) ? NaN : u ? o : 1 / 0);\n    for(w = !1, f = Math.sqrt(+o), f == 0 || f == 1 / 0 ? (n = b(u), (n.length + c) % 2 == 0 && (n += \"0\"), f = Math.sqrt(n), c = R((c + 1) / 2) - (c < 0 || c % 2), f == 1 / 0 ? n = \"5e\" + c : (n = f.toExponential(), n = n.slice(0, n.indexOf(\"e\") + 1) + c), t = new l(n)) : t = new l(f.toString()), i = (c = l.precision) + 3;;)if (s = t, t = s.plus(k(o, s, i + 2, 1)).times(.5), b(s.d).slice(0, i) === (n = b(t.d)).slice(0, i)) if (n = n.slice(i - 3, i + 1), n == \"9999\" || !r && n == \"4999\") {\n        if (!r && (p(s, c + 1, 0), s.times(s).eq(o))) {\n            t = s;\n            break;\n        }\n        i += 4, r = 1;\n    } else {\n        (!+n || !+n.slice(1) && n.charAt(0) == \"5\") && (p(t, c + 1, 1), e = !t.times(t).eq(o));\n        break;\n    }\n    return w = !0, p(t, c, l.rounding, e);\n};\nh.tangent = h.tan = function() {\n    var e, n, i = this, t = i.constructor;\n    return i.isFinite() ? i.isZero() ? new t(i) : (e = t.precision, n = t.rounding, t.precision = e + 10, t.rounding = 1, i = i.sin(), i.s = 1, i = k(i, new t(1).minus(i.times(i)).sqrt(), e + 10, 0), t.precision = e, t.rounding = n, p(Z == 2 || Z == 4 ? i.neg() : i, e, n, !0)) : new t(NaN);\n};\nh.times = h.mul = function(e) {\n    var n, i, t, r, s, o, u, c, f, l = this, a = l.constructor, d = l.d, g = (e = new a(e)).d;\n    if (e.s *= l.s, !d || !d[0] || !g || !g[0]) return new a(!e.s || d && !d[0] && !g || g && !g[0] && !d ? NaN : !d || !g ? e.s / 0 : e.s * 0);\n    for(i = R(l.e / m) + R(e.e / m), c = d.length, f = g.length, c < f && (s = d, d = g, g = s, o = c, c = f, f = o), s = [], o = c + f, t = o; t--;)s.push(0);\n    for(t = f; --t >= 0;){\n        for(n = 0, r = c + t; r > t;)u = s[r] + g[t] * d[r - t - 1] + n, s[r--] = u % D | 0, n = u / D | 0;\n        s[r] = (s[r] + n) % D | 0;\n    }\n    for(; !s[--o];)s.pop();\n    return n ? ++i : s.shift(), e.d = s, e.e = ce(s, i), w ? p(e, a.precision, a.rounding) : e;\n};\nh.toBinary = function(e, n) {\n    return Pe(this, 2, e, n);\n};\nh.toDecimalPlaces = h.toDP = function(e, n) {\n    var i = this, t = i.constructor;\n    return i = new t(i), e === void 0 ? i : (q(e, 0, H), n === void 0 ? n = t.rounding : q(n, 0, 8), p(i, e + i.e + 1, n));\n};\nh.toExponential = function(e, n) {\n    var i, t = this, r = t.constructor;\n    return e === void 0 ? i = L(t, !0) : (q(e, 0, H), n === void 0 ? n = r.rounding : q(n, 0, 8), t = p(new r(t), e + 1, n), i = L(t, !0, e + 1)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n};\nh.toFixed = function(e, n) {\n    var i, t, r = this, s = r.constructor;\n    return e === void 0 ? i = L(r) : (q(e, 0, H), n === void 0 ? n = s.rounding : q(n, 0, 8), t = p(new s(r), e + r.e + 1, n), i = L(t, !1, e + t.e + 1)), r.isNeg() && !r.isZero() ? \"-\" + i : i;\n};\nh.toFraction = function(e) {\n    var n, i, t, r, s, o, u, c, f, l, a, d, g = this, v = g.d, N = g.constructor;\n    if (!v) return new N(g);\n    if (f = i = new N(1), t = c = new N(0), n = new N(t), s = n.e = $e(v) - g.e - 1, o = s % m, n.d[0] = C(10, o < 0 ? m + o : o), e == null) e = s > 0 ? n : f;\n    else {\n        if (u = new N(e), !u.isInt() || u.lt(f)) throw Error($ + u);\n        e = u.gt(n) ? s > 0 ? n : f : u;\n    }\n    for(w = !1, u = new N(b(v)), l = N.precision, N.precision = s = v.length * m * 2; a = k(u, n, 0, 1, 1), r = i.plus(a.times(t)), r.cmp(e) != 1;)i = t, t = r, r = f, f = c.plus(a.times(r)), c = r, r = n, n = u.minus(a.times(r)), u = r;\n    return r = k(e.minus(i), t, 0, 1, 1), c = c.plus(r.times(f)), i = i.plus(r.times(t)), c.s = f.s = g.s, d = k(f, t, s, 1).minus(g).abs().cmp(k(c, i, s, 1).minus(g).abs()) < 1 ? [\n        f,\n        t\n    ] : [\n        c,\n        i\n    ], N.precision = l, w = !0, d;\n};\nh.toHexadecimal = h.toHex = function(e, n) {\n    return Pe(this, 16, e, n);\n};\nh.toNearest = function(e, n) {\n    var i = this, t = i.constructor;\n    if (i = new t(i), e == null) {\n        if (!i.d) return i;\n        e = new t(1), n = t.rounding;\n    } else {\n        if (e = new t(e), n === void 0 ? n = t.rounding : q(n, 0, 8), !i.d) return e.s ? i : e;\n        if (!e.d) return e.s && (e.s = i.s), e;\n    }\n    return e.d[0] ? (w = !1, i = k(i, e, 0, n, 1).times(e), w = !0, p(i)) : (e.s = i.s, i = e), i;\n};\nh.toNumber = function() {\n    return +this;\n};\nh.toOctal = function(e, n) {\n    return Pe(this, 8, e, n);\n};\nh.toPower = h.pow = function(e) {\n    var n, i, t, r, s, o, u = this, c = u.constructor, f = +(e = new c(e));\n    if (!u.d || !e.d || !u.d[0] || !e.d[0]) return new c(C(+u, f));\n    if (u = new c(u), u.eq(1)) return u;\n    if (t = c.precision, s = c.rounding, e.eq(1)) return p(u, t, s);\n    if (n = R(e.e / m), n >= e.d.length - 1 && (i = f < 0 ? -f : f) <= dn) return r = He(c, u, i, t), e.s < 0 ? new c(1).div(r) : p(r, t, s);\n    if (o = u.s, o < 0) {\n        if (n < e.d.length - 1) return new c(NaN);\n        if ((e.d[n] & 1) == 0 && (o = 1), u.e == 0 && u.d[0] == 1 && u.d.length == 1) return u.s = o, u;\n    }\n    return i = C(+u, f), n = i == 0 || !isFinite(i) ? R(f * (Math.log(\"0.\" + b(u.d)) / Math.LN10 + u.e + 1)) : new c(i + \"\").e, n > c.maxE + 1 || n < c.minE - 1 ? new c(n > 0 ? o / 0 : 0) : (w = !1, c.rounding = u.s = 1, i = Math.min(12, (n + \"\").length), r = be(e.times(B(u, t + i)), t), r.d && (r = p(r, t + 5, 1), Q(r.d, t, s) && (n = t + 10, r = p(be(e.times(B(u, n + i)), n), n + 5, 1), +b(r.d).slice(t + 1, t + 15) + 1 == 1e14 && (r = p(r, t + 1, 0)))), r.s = o, w = !0, c.rounding = s, p(r, t, s));\n};\nh.toPrecision = function(e, n) {\n    var i, t = this, r = t.constructor;\n    return e === void 0 ? i = L(t, t.e <= r.toExpNeg || t.e >= r.toExpPos) : (q(e, 1, H), n === void 0 ? n = r.rounding : q(n, 0, 8), t = p(new r(t), e, n), i = L(t, e <= t.e || t.e <= r.toExpNeg, e)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n};\nh.toSignificantDigits = h.toSD = function(e, n) {\n    var i = this, t = i.constructor;\n    return e === void 0 ? (e = t.precision, n = t.rounding) : (q(e, 1, H), n === void 0 ? n = t.rounding : q(n, 0, 8)), p(new t(i), e, n);\n};\nh.toString = function() {\n    var e = this, n = e.constructor, i = L(e, e.e <= n.toExpNeg || e.e >= n.toExpPos);\n    return e.isNeg() && !e.isZero() ? \"-\" + i : i;\n};\nh.truncated = h.trunc = function() {\n    return p(new this.constructor(this), this.e + 1, 1);\n};\nh.valueOf = h.toJSON = function() {\n    var e = this, n = e.constructor, i = L(e, e.e <= n.toExpNeg || e.e >= n.toExpPos);\n    return e.isNeg() ? \"-\" + i : i;\n};\nfunction b(e) {\n    var n, i, t, r = e.length - 1, s = \"\", o = e[0];\n    if (r > 0) {\n        for(s += o, n = 1; n < r; n++)t = e[n] + \"\", i = m - t.length, i && (s += U(i)), s += t;\n        o = e[n], t = o + \"\", i = m - t.length, i && (s += U(i));\n    } else if (o === 0) return \"0\";\n    for(; o % 10 === 0;)o /= 10;\n    return s + o;\n}\nfunction q(e, n, i) {\n    if (e !== ~~e || e < n || e > i) throw Error($ + e);\n}\nfunction Q(e, n, i, t) {\n    var r, s, o, u;\n    for(s = e[0]; s >= 10; s /= 10)--n;\n    return --n < 0 ? (n += m, r = 0) : (r = Math.ceil((n + 1) / m), n %= m), s = C(10, m - n), u = e[r] % s | 0, t == null ? n < 3 ? (n == 0 ? u = u / 100 | 0 : n == 1 && (u = u / 10 | 0), o = i < 4 && u == 99999 || i > 3 && u == 49999 || u == 5e4 || u == 0) : o = (i < 4 && u + 1 == s || i > 3 && u + 1 == s / 2) && (e[r + 1] / s / 100 | 0) == C(10, n - 2) - 1 || (u == s / 2 || u == 0) && (e[r + 1] / s / 100 | 0) == 0 : n < 4 ? (n == 0 ? u = u / 1e3 | 0 : n == 1 ? u = u / 100 | 0 : n == 2 && (u = u / 10 | 0), o = (t || i < 4) && u == 9999 || !t && i > 3 && u == 4999) : o = ((t || i < 4) && u + 1 == s || !t && i > 3 && u + 1 == s / 2) && (e[r + 1] / s / 1e3 | 0) == C(10, n - 3) - 1, o;\n}\n_c2 = Q;\nfunction te(e, n, i) {\n    for(var t, r = [\n        0\n    ], s, o = 0, u = e.length; o < u;){\n        for(s = r.length; s--;)r[s] *= n;\n        for(r[0] += Se.indexOf(e.charAt(o++)), t = 0; t < r.length; t++)r[t] > i - 1 && (r[t + 1] === void 0 && (r[t + 1] = 0), r[t + 1] += r[t] / i | 0, r[t] %= i);\n    }\n    return r.reverse();\n}\nfunction pn(e, n) {\n    var i, t, r;\n    if (n.isZero()) return n;\n    t = n.d.length, t < 32 ? (i = Math.ceil(t / 3), r = (1 / le(4, i)).toString()) : (i = 16, r = \"2.3283064365386962890625e-10\"), e.precision += i, n = j(e, 1, n.times(r), new e(1));\n    for(var s = i; s--;){\n        var o = n.times(n);\n        n = o.times(o).minus(o).times(8).plus(1);\n    }\n    return e.precision -= i, n;\n}\nvar k = function() {\n    function e(t, r, s) {\n        var o, u = 0, c = t.length;\n        for(t = t.slice(); c--;)o = t[c] * r + u, t[c] = o % s | 0, u = o / s | 0;\n        return u && t.unshift(u), t;\n    }\n    function n(t, r, s, o) {\n        var u, c;\n        if (s != o) c = s > o ? 1 : -1;\n        else for(u = c = 0; u < s; u++)if (t[u] != r[u]) {\n            c = t[u] > r[u] ? 1 : -1;\n            break;\n        }\n        return c;\n    }\n    function i(t, r, s, o) {\n        for(var u = 0; s--;)t[s] -= u, u = t[s] < r[s] ? 1 : 0, t[s] = u * o + t[s] - r[s];\n        for(; !t[0] && t.length > 1;)t.shift();\n    }\n    return function(t, r, s, o, u, c) {\n        var f, l, a, d, g, v, N, A, M, _, E, P, x, I, ae, z, W, de, T, y, ee = t.constructor, he = t.s == r.s ? 1 : -1, O = t.d, S = r.d;\n        if (!O || !O[0] || !S || !S[0]) return new ee(!t.s || !r.s || (O ? S && O[0] == S[0] : !S) ? NaN : O && O[0] == 0 || !S ? he * 0 : he / 0);\n        for(c ? (g = 1, l = t.e - r.e) : (c = D, g = m, l = R(t.e / g) - R(r.e / g)), T = S.length, W = O.length, M = new ee(he), _ = M.d = [], a = 0; S[a] == (O[a] || 0); a++);\n        if (S[a] > (O[a] || 0) && l--, s == null ? (I = s = ee.precision, o = ee.rounding) : u ? I = s + (t.e - r.e) + 1 : I = s, I < 0) _.push(1), v = !0;\n        else {\n            if (I = I / g + 2 | 0, a = 0, T == 1) {\n                for(d = 0, S = S[0], I++; (a < W || d) && I--; a++)ae = d * c + (O[a] || 0), _[a] = ae / S | 0, d = ae % S | 0;\n                v = d || a < W;\n            } else {\n                for(d = c / (S[0] + 1) | 0, d > 1 && (S = e(S, d, c), O = e(O, d, c), T = S.length, W = O.length), z = T, E = O.slice(0, T), P = E.length; P < T;)E[P++] = 0;\n                y = S.slice(), y.unshift(0), de = S[0], S[1] >= c / 2 && ++de;\n                do d = 0, f = n(S, E, T, P), f < 0 ? (x = E[0], T != P && (x = x * c + (E[1] || 0)), d = x / de | 0, d > 1 ? (d >= c && (d = c - 1), N = e(S, d, c), A = N.length, P = E.length, f = n(N, E, A, P), f == 1 && (d--, i(N, T < A ? y : S, A, c))) : (d == 0 && (f = d = 1), N = S.slice()), A = N.length, A < P && N.unshift(0), i(E, N, P, c), f == -1 && (P = E.length, f = n(S, E, T, P), f < 1 && (d++, i(E, T < P ? y : S, P, c))), P = E.length) : f === 0 && (d++, E = [\n                    0\n                ]), _[a++] = d, f && E[0] ? E[P++] = O[z] || 0 : (E = [\n                    O[z]\n                ], P = 1);\n                while ((z++ < W || E[0] !== void 0) && I--);\n                v = E[0] !== void 0;\n            }\n            _[0] || _.shift();\n        }\n        if (g == 1) M.e = l, Le = v;\n        else {\n            for(a = 1, d = _[0]; d >= 10; d /= 10)a++;\n            M.e = a + l * g - 1, p(M, u ? s + M.e + 1 : s, o, v);\n        }\n        return M;\n    };\n}();\nfunction p(e, n, i, t) {\n    var r, s, o, u, c, f, l, a, d, g = e.constructor;\n    e: if (n != null) {\n        if (a = e.d, !a) return e;\n        for(r = 1, u = a[0]; u >= 10; u /= 10)r++;\n        if (s = n - r, s < 0) s += m, o = n, l = a[d = 0], c = l / C(10, r - o - 1) % 10 | 0;\n        else if (d = Math.ceil((s + 1) / m), u = a.length, d >= u) if (t) {\n            for(; u++ <= d;)a.push(0);\n            l = c = 0, r = 1, s %= m, o = s - m + 1;\n        } else break e;\n        else {\n            for(l = u = a[d], r = 1; u >= 10; u /= 10)r++;\n            s %= m, o = s - m + r, c = o < 0 ? 0 : l / C(10, r - o - 1) % 10 | 0;\n        }\n        if (t = t || n < 0 || a[d + 1] !== void 0 || (o < 0 ? l : l % C(10, r - o - 1)), f = i < 4 ? (c || t) && (i == 0 || i == (e.s < 0 ? 3 : 2)) : c > 5 || c == 5 && (i == 4 || t || i == 6 && (s > 0 ? o > 0 ? l / C(10, r - o) : 0 : a[d - 1]) % 10 & 1 || i == (e.s < 0 ? 8 : 7)), n < 1 || !a[0]) return a.length = 0, f ? (n -= e.e + 1, a[0] = C(10, (m - n % m) % m), e.e = -n || 0) : a[0] = e.e = 0, e;\n        if (s == 0 ? (a.length = d, u = 1, d--) : (a.length = d + 1, u = C(10, m - s), a[d] = o > 0 ? (l / C(10, r - o) % C(10, o) | 0) * u : 0), f) for(;;)if (d == 0) {\n            for(s = 1, o = a[0]; o >= 10; o /= 10)s++;\n            for(o = a[0] += u, u = 1; o >= 10; o /= 10)u++;\n            s != u && (e.e++, a[0] == D && (a[0] = 1));\n            break;\n        } else {\n            if (a[d] += u, a[d] != D) break;\n            a[d--] = 0, u = 1;\n        }\n        for(s = a.length; a[--s] === 0;)a.pop();\n    }\n    return w && (e.e > g.maxE ? (e.d = null, e.e = NaN) : e.e < g.minE && (e.e = 0, e.d = [\n        0\n    ])), e;\n}\nfunction L(e, n, i) {\n    if (!e.isFinite()) return je(e);\n    var t, r = e.e, s = b(e.d), o = s.length;\n    return n ? (i && (t = i - o) > 0 ? s = s.charAt(0) + \".\" + s.slice(1) + U(t) : o > 1 && (s = s.charAt(0) + \".\" + s.slice(1)), s = s + (e.e < 0 ? \"e\" : \"e+\") + e.e) : r < 0 ? (s = \"0.\" + U(-r - 1) + s, i && (t = i - o) > 0 && (s += U(t))) : r >= o ? (s += U(r + 1 - o), i && (t = i - r - 1) > 0 && (s = s + \".\" + U(t))) : ((t = r + 1) < o && (s = s.slice(0, t) + \".\" + s.slice(t)), i && (t = i - o) > 0 && (r + 1 === o && (s += \".\"), s += U(t))), s;\n}\n_c3 = L;\nfunction ce(e, n) {\n    var i = e[0];\n    for(n *= m; i >= 10; i /= 10)n++;\n    return n;\n}\nfunction ue(e, n, i) {\n    if (n > hn) throw w = !0, i && (e.precision = i), Error(Ie);\n    return p(new e(se), n, 1, !0);\n}\nfunction F(e, n, i) {\n    if (n > Ce) throw Error(Ie);\n    return p(new e(oe), n, i, !0);\n}\n_c4 = F;\nfunction $e(e) {\n    var n = e.length - 1, i = n * m + 1;\n    if (n = e[n], n) {\n        for(; n % 10 == 0; n /= 10)i--;\n        for(n = e[0]; n >= 10; n /= 10)i++;\n    }\n    return i;\n}\nfunction U(e) {\n    for(var n = \"\"; e--;)n += \"0\";\n    return n;\n}\n_c5 = U;\nfunction He(e, n, i, t) {\n    var r, s = new e(1), o = Math.ceil(t / m + 4);\n    for(w = !1;;){\n        if (i % 2 && (s = s.times(n), De(s.d, o) && (r = !0)), i = R(i / 2), i === 0) {\n            i = s.d.length - 1, r && s.d[i] === 0 && ++s.d[i];\n            break;\n        }\n        n = n.times(n), De(n.d, o);\n    }\n    return w = !0, s;\n}\n_c6 = He;\nfunction Te(e) {\n    return e.d[e.d.length - 1] & 1;\n}\n_c7 = Te;\nfunction Ve(e, n, i) {\n    for(var t, r, s = new e(n[0]), o = 0; ++o < n.length;){\n        if (r = new e(n[o]), !r.s) {\n            s = r;\n            break;\n        }\n        t = s.cmp(r), (t === i || t === 0 && s.s === i) && (s = r);\n    }\n    return s;\n}\n_c8 = Ve;\nfunction be(e, n) {\n    var i, t, r, s, o, u, c, f = 0, l = 0, a = 0, d = e.constructor, g = d.rounding, v = d.precision;\n    if (!e.d || !e.d[0] || e.e > 17) return new d(e.d ? e.d[0] ? e.s < 0 ? 0 : 1 / 0 : 1 : e.s ? e.s < 0 ? 0 : e : NaN);\n    for(n == null ? (w = !1, c = v) : c = n, u = new d(.03125); e.e > -2;)e = e.times(u), a += 5;\n    for(t = Math.log(C(2, a)) / Math.LN10 * 2 + 5 | 0, c += t, i = s = o = new d(1), d.precision = c;;){\n        if (s = p(s.times(e), c, 1), i = i.times(++l), u = o.plus(k(s, i, c, 1)), b(u.d).slice(0, c) === b(o.d).slice(0, c)) {\n            for(r = a; r--;)o = p(o.times(o), c, 1);\n            if (n == null) if (f < 3 && Q(o.d, c - t, g, f)) d.precision = c += 10, i = s = u = new d(1), l = 0, f++;\n            else return p(o, d.precision = v, g, w = !0);\n            else return d.precision = v, o;\n        }\n        o = u;\n    }\n}\nfunction B(e, n) {\n    var i, t, r, s, o, u, c, f, l, a, d, g = 1, v = 10, N = e, A = N.d, M = N.constructor, _ = M.rounding, E = M.precision;\n    if (N.s < 0 || !A || !A[0] || !N.e && A[0] == 1 && A.length == 1) return new M(A && !A[0] ? -1 / 0 : N.s != 1 ? NaN : A ? 0 : N);\n    if (n == null ? (w = !1, l = E) : l = n, M.precision = l += v, i = b(A), t = i.charAt(0), Math.abs(s = N.e) < 15e14) {\n        for(; t < 7 && t != 1 || t == 1 && i.charAt(1) > 3;)N = N.times(e), i = b(N.d), t = i.charAt(0), g++;\n        s = N.e, t > 1 ? (N = new M(\"0.\" + i), s++) : N = new M(t + \".\" + i.slice(1));\n    } else return f = ue(M, l + 2, E).times(s + \"\"), N = B(new M(t + \".\" + i.slice(1)), l - v).plus(f), M.precision = E, n == null ? p(N, E, _, w = !0) : N;\n    for(a = N, c = o = N = k(N.minus(1), N.plus(1), l, 1), d = p(N.times(N), l, 1), r = 3;;){\n        if (o = p(o.times(d), l, 1), f = c.plus(k(o, new M(r), l, 1)), b(f.d).slice(0, l) === b(c.d).slice(0, l)) if (c = c.times(2), s !== 0 && (c = c.plus(ue(M, l + 2, E).times(s + \"\"))), c = k(c, new M(g), l, 1), n == null) if (Q(c.d, l - v, _, u)) M.precision = l += v, f = o = N = k(a.minus(1), a.plus(1), l, 1), d = p(N.times(N), l, 1), r = u = 1;\n        else return p(c, M.precision = E, _, w = !0);\n        else return M.precision = E, c;\n        c = f, r += 2;\n    }\n}\n_c9 = B;\nfunction je(e) {\n    return String(e.s * e.s / 0);\n}\nfunction re(e, n) {\n    var i, t, r;\n    for((i = n.indexOf(\".\")) > -1 && (n = n.replace(\".\", \"\")), (t = n.search(/e/i)) > 0 ? (i < 0 && (i = t), i += +n.slice(t + 1), n = n.substring(0, t)) : i < 0 && (i = n.length), t = 0; n.charCodeAt(t) === 48; t++);\n    for(r = n.length; n.charCodeAt(r - 1) === 48; --r);\n    if (n = n.slice(t, r), n) {\n        if (r -= t, e.e = i = i - t - 1, e.d = [], t = (i + 1) % m, i < 0 && (t += m), t < r) {\n            for(t && e.d.push(+n.slice(0, t)), r -= m; t < r;)e.d.push(+n.slice(t, t += m));\n            n = n.slice(t), t = m - n.length;\n        } else t -= r;\n        for(; t--;)n += \"0\";\n        e.d.push(+n), w && (e.e > e.constructor.maxE ? (e.d = null, e.e = NaN) : e.e < e.constructor.minE && (e.e = 0, e.d = [\n            0\n        ]));\n    } else e.e = 0, e.d = [\n        0\n    ];\n    return e;\n}\nfunction gn(e, n) {\n    var i, t, r, s, o, u, c, f, l;\n    if (n.indexOf(\"_\") > -1) {\n        if (n = n.replace(/(\\d)_(?=\\d)/g, \"$1\"), Be.test(n)) return re(e, n);\n    } else if (n === \"Infinity\" || n === \"NaN\") return +n || (e.s = NaN), e.e = NaN, e.d = null, e;\n    if (ln.test(n)) i = 16, n = n.toLowerCase();\n    else if (cn.test(n)) i = 2;\n    else if (an.test(n)) i = 8;\n    else throw Error($ + n);\n    for(s = n.search(/p/i), s > 0 ? (c = +n.slice(s + 1), n = n.substring(2, s)) : n = n.slice(2), s = n.indexOf(\".\"), o = s >= 0, t = e.constructor, o && (n = n.replace(\".\", \"\"), u = n.length, s = u - s, r = He(t, new t(i), s, s * 2)), f = te(n, i, D), l = f.length - 1, s = l; f[s] === 0; --s)f.pop();\n    return s < 0 ? new t(e.s * 0) : (e.e = ce(f, l), e.d = f, w = !1, o && (e = k(e, r, u * 4)), c && (e = e.times(Math.abs(c) < 54 ? C(2, c) : Y.pow(2, c))), w = !0, e);\n}\nfunction mn(e, n) {\n    var i, t = n.d.length;\n    if (t < 3) return n.isZero() ? n : j(e, 2, n, n);\n    i = 1.4 * Math.sqrt(t), i = i > 16 ? 16 : i | 0, n = n.times(1 / le(5, i)), n = j(e, 2, n, n);\n    for(var r, s = new e(5), o = new e(16), u = new e(20); i--;)r = n.times(n), n = n.times(s.plus(r.times(o.times(r).minus(u))));\n    return n;\n}\nfunction j(e, n, i, t, r) {\n    var s, o, u, c, f = 1, l = e.precision, a = Math.ceil(l / m);\n    for(w = !1, c = i.times(i), u = new e(t);;){\n        if (o = k(u.times(c), new e(n++ * n++), l, 1), u = r ? t.plus(o) : t.minus(o), t = k(o.times(c), new e(n++ * n++), l, 1), o = u.plus(t), o.d[a] !== void 0) {\n            for(s = a; o.d[s] === u.d[s] && s--;);\n            if (s == -1) break;\n        }\n        s = u, u = t, t = o, o = s, f++;\n    }\n    return w = !0, o.d.length = a + 1, o;\n}\nfunction le(e, n) {\n    for(var i = e; --n;)i *= e;\n    return i;\n}\nfunction We(e, n) {\n    var i, t = n.s < 0, r = F(e, e.precision, 1), s = r.times(.5);\n    if (n = n.abs(), n.lte(s)) return Z = t ? 4 : 1, n;\n    if (i = n.divToInt(r), i.isZero()) Z = t ? 3 : 2;\n    else {\n        if (n = n.minus(i.times(r)), n.lte(s)) return Z = Te(i) ? t ? 2 : 3 : t ? 4 : 1, n;\n        Z = Te(i) ? t ? 1 : 4 : t ? 3 : 2;\n    }\n    return n.minus(r).abs();\n}\n_c10 = We;\nfunction Pe(e, n, i, t) {\n    var r, s, o, u, c, f, l, a, d, g = e.constructor, v = i !== void 0;\n    if (v ? (q(i, 1, H), t === void 0 ? t = g.rounding : q(t, 0, 8)) : (i = g.precision, t = g.rounding), !e.isFinite()) l = je(e);\n    else {\n        for(l = L(e), o = l.indexOf(\".\"), v ? (r = 2, n == 16 ? i = i * 4 - 3 : n == 8 && (i = i * 3 - 2)) : r = n, o >= 0 && (l = l.replace(\".\", \"\"), d = new g(1), d.e = l.length - o, d.d = te(L(d), 10, r), d.e = d.d.length), a = te(l, 10, r), s = c = a.length; a[--c] == 0;)a.pop();\n        if (!a[0]) l = v ? \"0p+0\" : \"0\";\n        else {\n            if (o < 0 ? s-- : (e = new g(e), e.d = a, e.e = s, e = k(e, d, i, t, 0, r), a = e.d, s = e.e, f = Le), o = a[i], u = r / 2, f = f || a[i + 1] !== void 0, f = t < 4 ? (o !== void 0 || f) && (t === 0 || t === (e.s < 0 ? 3 : 2)) : o > u || o === u && (t === 4 || f || t === 6 && a[i - 1] & 1 || t === (e.s < 0 ? 8 : 7)), a.length = i, f) for(; ++a[--i] > r - 1;)a[i] = 0, i || (++s, a.unshift(1));\n            for(c = a.length; !a[c - 1]; --c);\n            for(o = 0, l = \"\"; o < c; o++)l += Se.charAt(a[o]);\n            if (v) {\n                if (c > 1) if (n == 16 || n == 8) {\n                    for(o = n == 16 ? 4 : 3, --c; c % o; c++)l += \"0\";\n                    for(a = te(l, r, n), c = a.length; !a[c - 1]; --c);\n                    for(o = 1, l = \"1.\"; o < c; o++)l += Se.charAt(a[o]);\n                } else l = l.charAt(0) + \".\" + l.slice(1);\n                l = l + (s < 0 ? \"p\" : \"p+\") + s;\n            } else if (s < 0) {\n                for(; ++s;)l = \"0\" + l;\n                l = \"0.\" + l;\n            } else if (++s > c) for(s -= c; s--;)l += \"0\";\n            else s < c && (l = l.slice(0, s) + \".\" + l.slice(s));\n        }\n        l = (n == 16 ? \"0x\" : n == 2 ? \"0b\" : n == 8 ? \"0o\" : \"\") + l;\n    }\n    return e.s < 0 ? \"-\" + l : l;\n}\n_c11 = Pe;\nfunction De(e, n) {\n    if (e.length > n) return e.length = n, !0;\n}\n_c12 = De;\nfunction wn(e) {\n    return new this(e).abs();\n}\nfunction Nn(e) {\n    return new this(e).acos();\n}\n_c13 = Nn;\nfunction vn(e) {\n    return new this(e).acosh();\n}\nfunction En(e, n) {\n    return new this(e).plus(n);\n}\n_c14 = En;\nfunction kn(e) {\n    return new this(e).asin();\n}\nfunction Sn(e) {\n    return new this(e).asinh();\n}\n_c15 = Sn;\nfunction Mn(e) {\n    return new this(e).atan();\n}\n_c16 = Mn;\nfunction Cn(e) {\n    return new this(e).atanh();\n}\n_c17 = Cn;\nfunction bn(e, n) {\n    e = new this(e), n = new this(n);\n    var i, t = this.precision, r = this.rounding, s = t + 4;\n    return !e.s || !n.s ? i = new this(NaN) : !e.d && !n.d ? (i = F(this, s, 1).times(n.s > 0 ? .25 : .75), i.s = e.s) : !n.d || e.isZero() ? (i = n.s < 0 ? F(this, t, r) : new this(0), i.s = e.s) : !e.d || n.isZero() ? (i = F(this, s, 1).times(.5), i.s = e.s) : n.s < 0 ? (this.precision = s, this.rounding = 1, i = this.atan(k(e, n, s, 1)), n = F(this, s, 1), this.precision = t, this.rounding = r, i = e.s < 0 ? i.minus(n) : i.plus(n)) : i = this.atan(k(e, n, s, 1)), i;\n}\nfunction Pn(e) {\n    return new this(e).cbrt();\n}\n_c18 = Pn;\nfunction On(e) {\n    return p(e = new this(e), e.e + 1, 2);\n}\n_c19 = On;\nfunction Rn(e, n, i) {\n    return new this(e).clamp(n, i);\n}\n_c20 = Rn;\nfunction An(e) {\n    if (!e || typeof e != \"object\") throw Error(fe + \"Object expected\");\n    var n, i, t, r = e.defaults === !0, s = [\n        \"precision\",\n        1,\n        H,\n        \"rounding\",\n        0,\n        8,\n        \"toExpNeg\",\n        -V,\n        0,\n        \"toExpPos\",\n        0,\n        V,\n        \"maxE\",\n        0,\n        V,\n        \"minE\",\n        -V,\n        0,\n        \"modulo\",\n        0,\n        9\n    ];\n    for(n = 0; n < s.length; n += 3)if (i = s[n], r && (this[i] = Me[i]), (t = e[i]) !== void 0) if (R(t) === t && t >= s[n + 1] && t <= s[n + 2]) this[i] = t;\n    else throw Error($ + i + \": \" + t);\n    if (i = \"crypto\", r && (this[i] = Me[i]), (t = e[i]) !== void 0) if (t === !0 || t === !1 || t === 0 || t === 1) if (t) if (typeof crypto < \"u\" && crypto && (crypto.getRandomValues || crypto.randomBytes)) this[i] = !0;\n    else throw Error(Ze);\n    else this[i] = !1;\n    else throw Error($ + i + \": \" + t);\n    return this;\n}\n_c21 = An;\nfunction qn(e) {\n    return new this(e).cos();\n}\nfunction _n(e) {\n    return new this(e).cosh();\n}\nfunction Ge(e) {\n    var n, i, t;\n    function r(s) {\n        var o, u, c, f = this;\n        if (!(f instanceof r)) return new r(s);\n        if (f.constructor = r, Fe(s)) {\n            f.s = s.s, w ? !s.d || s.e > r.maxE ? (f.e = NaN, f.d = null) : s.e < r.minE ? (f.e = 0, f.d = [\n                0\n            ]) : (f.e = s.e, f.d = s.d.slice()) : (f.e = s.e, f.d = s.d ? s.d.slice() : s.d);\n            return;\n        }\n        if (c = typeof s, c === \"number\") {\n            if (s === 0) {\n                f.s = 1 / s < 0 ? -1 : 1, f.e = 0, f.d = [\n                    0\n                ];\n                return;\n            }\n            if (s < 0 ? (s = -s, f.s = -1) : f.s = 1, s === ~~s && s < 1e7) {\n                for(o = 0, u = s; u >= 10; u /= 10)o++;\n                w ? o > r.maxE ? (f.e = NaN, f.d = null) : o < r.minE ? (f.e = 0, f.d = [\n                    0\n                ]) : (f.e = o, f.d = [\n                    s\n                ]) : (f.e = o, f.d = [\n                    s\n                ]);\n                return;\n            }\n            if (s * 0 !== 0) {\n                s || (f.s = NaN), f.e = NaN, f.d = null;\n                return;\n            }\n            return re(f, s.toString());\n        }\n        if (c === \"string\") return (u = s.charCodeAt(0)) === 45 ? (s = s.slice(1), f.s = -1) : (u === 43 && (s = s.slice(1)), f.s = 1), Be.test(s) ? re(f, s) : gn(f, s);\n        if (c === \"bigint\") return s < 0 ? (s = -s, f.s = -1) : f.s = 1, re(f, s.toString());\n        throw Error($ + s);\n    }\n    if (r.prototype = h, r.ROUND_UP = 0, r.ROUND_DOWN = 1, r.ROUND_CEIL = 2, r.ROUND_FLOOR = 3, r.ROUND_HALF_UP = 4, r.ROUND_HALF_DOWN = 5, r.ROUND_HALF_EVEN = 6, r.ROUND_HALF_CEIL = 7, r.ROUND_HALF_FLOOR = 8, r.EUCLID = 9, r.config = r.set = An, r.clone = Ge, r.isDecimal = Fe, r.abs = wn, r.acos = Nn, r.acosh = vn, r.add = En, r.asin = kn, r.asinh = Sn, r.atan = Mn, r.atanh = Cn, r.atan2 = bn, r.cbrt = Pn, r.ceil = On, r.clamp = Rn, r.cos = qn, r.cosh = _n, r.div = Tn, r.exp = Dn, r.floor = Fn, r.hypot = Ln, r.ln = In, r.log = Zn, r.log10 = Bn, r.log2 = Un, r.max = $n, r.min = Hn, r.mod = Vn, r.mul = jn, r.pow = Wn, r.random = Gn, r.round = Jn, r.sign = Xn, r.sin = Kn, r.sinh = Qn, r.sqrt = Yn, r.sub = xn, r.sum = zn, r.tan = yn, r.tanh = ei, r.trunc = ni, e === void 0 && (e = {}), e && e.defaults !== !0) for(t = [\n        \"precision\",\n        \"rounding\",\n        \"toExpNeg\",\n        \"toExpPos\",\n        \"maxE\",\n        \"minE\",\n        \"modulo\",\n        \"crypto\"\n    ], n = 0; n < t.length;)e.hasOwnProperty(i = t[n++]) || (e[i] = this[i]);\n    return r.config(e), r;\n}\n_c22 = Ge;\nfunction Tn(e, n) {\n    return new this(e).div(n);\n}\n_c23 = Tn;\nfunction Dn(e) {\n    return new this(e).exp();\n}\n_c24 = Dn;\nfunction Fn(e) {\n    return p(e = new this(e), e.e + 1, 3);\n}\n_c25 = Fn;\nfunction Ln() {\n    var e, n, i = new this(0);\n    for(w = !1, e = 0; e < arguments.length;)if (n = new this(arguments[e++]), n.d) i.d && (i = i.plus(n.times(n)));\n    else {\n        if (n.s) return w = !0, new this(1 / 0);\n        i = n;\n    }\n    return w = !0, i.sqrt();\n}\n_c26 = Ln;\nfunction Fe(e) {\n    return e instanceof Y || e && e.toStringTag === Ue || !1;\n}\n_c27 = Fe;\nfunction In(e) {\n    return new this(e).ln();\n}\n_c28 = In;\nfunction Zn(e, n) {\n    return new this(e).log(n);\n}\n_c29 = Zn;\nfunction Un(e) {\n    return new this(e).log(2);\n}\n_c30 = Un;\nfunction Bn(e) {\n    return new this(e).log(10);\n}\n_c31 = Bn;\nfunction $n() {\n    return Ve(this, arguments, -1);\n}\nfunction Hn() {\n    return Ve(this, arguments, 1);\n}\n_c32 = Hn;\nfunction Vn(e, n) {\n    return new this(e).mod(n);\n}\n_c33 = Vn;\nfunction jn(e, n) {\n    return new this(e).mul(n);\n}\nfunction Wn(e, n) {\n    return new this(e).pow(n);\n}\n_c34 = Wn;\nfunction Gn(e) {\n    var n, i, t, r, s = 0, o = new this(1), u = [];\n    if (e === void 0 ? e = this.precision : q(e, 1, H), t = Math.ceil(e / m), this.crypto) if (crypto.getRandomValues) for(n = crypto.getRandomValues(new Uint32Array(t)); s < t;)r = n[s], r >= 429e7 ? n[s] = crypto.getRandomValues(new Uint32Array(1))[0] : u[s++] = r % 1e7;\n    else if (crypto.randomBytes) {\n        for(n = crypto.randomBytes(t *= 4); s < t;)r = n[s] + (n[s + 1] << 8) + (n[s + 2] << 16) + ((n[s + 3] & 127) << 24), r >= 214e7 ? crypto.randomBytes(4).copy(n, s) : (u.push(r % 1e7), s += 4);\n        s = t / 4;\n    } else throw Error(Ze);\n    else for(; s < t;)u[s++] = Math.random() * 1e7 | 0;\n    for(t = u[--s], e %= m, t && e && (r = C(10, m - e), u[s] = (t / r | 0) * r); u[s] === 0; s--)u.pop();\n    if (s < 0) i = 0, u = [\n        0\n    ];\n    else {\n        for(i = -1; u[0] === 0; i -= m)u.shift();\n        for(t = 1, r = u[0]; r >= 10; r /= 10)t++;\n        t < m && (i -= m - t);\n    }\n    return o.e = i, o.d = u, o;\n}\n_c35 = Gn;\nfunction Jn(e) {\n    return p(e = new this(e), e.e + 1, this.rounding);\n}\n_c36 = Jn;\nfunction Xn(e) {\n    return e = new this(e), e.d ? e.d[0] ? e.s : 0 * e.s : e.s || NaN;\n}\n_c37 = Xn;\nfunction Kn(e) {\n    return new this(e).sin();\n}\n_c38 = Kn;\nfunction Qn(e) {\n    return new this(e).sinh();\n}\n_c39 = Qn;\nfunction Yn(e) {\n    return new this(e).sqrt();\n}\n_c40 = Yn;\nfunction xn(e, n) {\n    return new this(e).sub(n);\n}\nfunction zn() {\n    var e = 0, n = arguments, i = new this(n[e]);\n    for(w = !1; i.s && ++e < n.length;)i = i.plus(n[e]);\n    return w = !0, p(i, this.precision, this.rounding);\n}\nfunction yn(e) {\n    return new this(e).tan();\n}\nfunction ei(e) {\n    return new this(e).tanh();\n}\nfunction ni(e) {\n    return p(e = new this(e), e.e + 1, 1);\n}\nh[Symbol.for(\"nodejs.util.inspect.custom\")] = h.toString;\nh[Symbol.toStringTag] = \"Decimal\";\nvar Y = h.constructor = Ge(Me);\nse = new Y(se);\noe = new Y(oe);\nvar Je = Y;\n0 && (0); /*! Bundled license information:\n\ndecimal.js/decimal.mjs:\n  (*!\n   *  decimal.js v10.5.0\n   *  An arbitrary-precision Decimal type for JavaScript.\n   *  https://github.com/MikeMcl/decimal.js\n   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\n   *  MIT Licence\n   *)\n*/  //# sourceMappingURL=index-browser.js.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40;\n$RefreshReg$(_c, \"Ye\");\n$RefreshReg$(_c1, \"Re\");\n$RefreshReg$(_c2, \"Q\");\n$RefreshReg$(_c3, \"L\");\n$RefreshReg$(_c4, \"F\");\n$RefreshReg$(_c5, \"U\");\n$RefreshReg$(_c6, \"He\");\n$RefreshReg$(_c7, \"Te\");\n$RefreshReg$(_c8, \"Ve\");\n$RefreshReg$(_c9, \"B\");\n$RefreshReg$(_c10, \"We\");\n$RefreshReg$(_c11, \"Pe\");\n$RefreshReg$(_c12, \"De\");\n$RefreshReg$(_c13, \"Nn\");\n$RefreshReg$(_c14, \"En\");\n$RefreshReg$(_c15, \"Sn\");\n$RefreshReg$(_c16, \"Mn\");\n$RefreshReg$(_c17, \"Cn\");\n$RefreshReg$(_c18, \"Pn\");\n$RefreshReg$(_c19, \"On\");\n$RefreshReg$(_c20, \"Rn\");\n$RefreshReg$(_c21, \"An\");\n$RefreshReg$(_c22, \"Ge\");\n$RefreshReg$(_c23, \"Tn\");\n$RefreshReg$(_c24, \"Dn\");\n$RefreshReg$(_c25, \"Fn\");\n$RefreshReg$(_c26, \"Ln\");\n$RefreshReg$(_c27, \"Fe\");\n$RefreshReg$(_c28, \"In\");\n$RefreshReg$(_c29, \"Zn\");\n$RefreshReg$(_c30, \"Un\");\n$RefreshReg$(_c31, \"Bn\");\n$RefreshReg$(_c32, \"Hn\");\n$RefreshReg$(_c33, \"Vn\");\n$RefreshReg$(_c34, \"Wn\");\n$RefreshReg$(_c35, \"Gn\");\n$RefreshReg$(_c36, \"Jn\");\n$RefreshReg$(_c37, \"Xn\");\n$RefreshReg$(_c38, \"Kn\");\n$RefreshReg$(_c39, \"Qn\");\n$RefreshReg$(_c40, \"Yn\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/generated/prisma/runtime/index-browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CKOD%5C%5CNextJS%5C%5CPharma-Bridge-Journey%5C%5Capp%5C%5C(dashboard)%5C%5Cdashboard%5C%5Ccourses%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CKOD%5C%5CNextJS%5C%5CPharma-Bridge-Journey%5C%5Capp%5C%5C(dashboard)%5C%5Cdashboard%5C%5Ccourses%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/(dashboard)/dashboard/courses/page.tsx */ \"(app-pages-browser)/./app/(dashboard)/dashboard/courses/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q0tPRCU1QyU1Q05leHRKUyU1QyU1Q1BoYXJtYS1CcmlkZ2UtSm91cm5leSU1QyU1Q2FwcCU1QyU1QyhkYXNoYm9hcmQpJTVDJTVDZGFzaGJvYXJkJTVDJTVDY291cnNlcyU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsa05BQTJIIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxLT0RcXFxcTmV4dEpTXFxcXFBoYXJtYS1CcmlkZ2UtSm91cm5leVxcXFxhcHBcXFxcKGRhc2hib2FyZClcXFxcZGFzaGJvYXJkXFxcXGNvdXJzZXNcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CKOD%5C%5CNextJS%5C%5CPharma-Bridge-Journey%5C%5Capp%5C%5C(dashboard)%5C%5Cdashboard%5C%5Ccourses%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ })

});